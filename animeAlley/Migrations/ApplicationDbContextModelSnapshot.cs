// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using animeAlley.Data;

#nullable disable

namespace animeAlley.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("animeAlley.Models.Autor", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("DateNasc")
                    .HasColumnType("datetime2");

                b.Property<string>("Foto")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Sobre")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.HasKey("Id");

                b.ToTable("Autores");
            });

            modelBuilder.Entity("animeAlley.Models.Comentario", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateTime>("DataComent")
                    .HasColumnType("datetime2");

                b.Property<string>("Mensagem")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int?>("TopicoId")
                    .HasColumnType("int");

                b.Property<int>("UtilizadorId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("TopicoId");

                b.HasIndex("UtilizadorId");

                b.ToTable("Comentarios");
            });

            modelBuilder.Entity("animeAlley.Models.Forum", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Tema")
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnType("nvarchar(80)");

                b.HasKey("Id");

                b.ToTable("Foruns");
            });

            modelBuilder.Entity("animeAlley.Models.Genero", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("GeneroNome")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<int?>("ShowId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ShowId");

                b.ToTable("Generos");
            });

            modelBuilder.Entity("animeAlley.Models.Lista", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("UtilizadorId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("UtilizadorId");

                b.ToTable("Listas");
            });

            modelBuilder.Entity("animeAlley.Models.ListaShows", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("ListaId")
                    .HasColumnType("int");

                b.Property<int>("ShowId")
                    .HasColumnType("int");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ListaId");

                b.HasIndex("ShowId");

                b.ToTable("ListasShows");
            });

            modelBuilder.Entity("animeAlley.Models.Obra", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int?>("AutorId")
                    .HasColumnType("int");

                b.Property<int?>("PersonagemId")
                    .HasColumnType("int");

                b.Property<int>("ShowID")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("AutorId");

                b.HasIndex("PersonagemId");

                b.HasIndex("ShowID");

                b.ToTable("Obras");
            });

            modelBuilder.Entity("animeAlley.Models.Personagem", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Foto")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.Property<int?>("ShowId")
                    .HasColumnType("int");

                b.Property<string>("Sinopse")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int>("TipoPersonagem")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ShowId");

                b.ToTable("Personagens");
            });

            modelBuilder.Entity("animeAlley.Models.Show", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("Ano")
                    .HasColumnType("int");

                b.Property<int>("AutorFK")
                    .HasColumnType("int");

                b.Property<int>("Fonte")
                    .HasColumnType("int");

                b.Property<string>("Imagem")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<bool>("IsAnime")
                    .HasColumnType("bit");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<decimal>("Nota")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("Sinopse")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("StudioFK")
                    .HasColumnType("int");

                b.Property<int>("Tipo")
                    .HasColumnType("int");

                b.Property<string>("Trailer")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int>("Views")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("AutorFK");

                b.HasIndex("StudioFK");

                b.ToTable("Shows");
            });

            modelBuilder.Entity("animeAlley.Models.Studio", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Sobre")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Stuidos");
            });

            modelBuilder.Entity("animeAlley.Models.Topico", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Comentario")
                    .IsRequired()
                    .HasMaxLength(500)
                    .HasColumnType("nvarchar(500)");

                b.Property<DateTime>("DataPost")
                    .HasColumnType("datetime2");

                b.Property<int?>("ForumId")
                    .HasColumnType("int");

                b.Property<string>("Titulo")
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnType("nvarchar(80)");

                b.Property<int>("UtilizadorId")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("ForumId");

                b.HasIndex("UtilizadorId");

                b.ToTable("Topicos");
            });

            modelBuilder.Entity("animeAlley.Models.Utilizador", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Foto")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("Nome")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasMaxLength(24)
                    .HasColumnType("nvarchar(24)");

                b.HasKey("Id");

                b.ToTable("Utilizadores");
            });

            modelBuilder.Entity("animeAlley.Models.Comentario", b =>
            {
                b.HasOne("animeAlley.Models.Topico", null)
                    .WithMany("Comentarios")
                    .HasForeignKey("TopicoId");

                b.HasOne("animeAlley.Models.Utilizador", "Utilizador")
                    .WithMany()
                    .HasForeignKey("UtilizadorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Utilizador");
            });

            modelBuilder.Entity("animeAlley.Models.Genero", b =>
            {
                b.HasOne("animeAlley.Models.Show", null)
                    .WithMany("GenerosShows")
                    .HasForeignKey("ShowId");
            });

            modelBuilder.Entity("animeAlley.Models.Lista", b =>
            {
                b.HasOne("animeAlley.Models.Utilizador", "Utilizador")
                    .WithMany("Listas")
                    .HasForeignKey("UtilizadorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Utilizador");
            });

            modelBuilder.Entity("animeAlley.Models.ListaShows", b =>
            {
                b.HasOne("animeAlley.Models.Lista", "Lista")
                    .WithMany("ListaShows")
                    .HasForeignKey("ListaId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("animeAlley.Models.Show", "Show")
                    .WithMany("ListaShows")
                    .HasForeignKey("ShowId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Lista");

                b.Navigation("Show");
            });

            modelBuilder.Entity("animeAlley.Models.Obra", b =>
            {
                b.HasOne("animeAlley.Models.Autor", null)
                    .WithMany("ObrasAutor")
                    .HasForeignKey("AutorId");

                b.HasOne("animeAlley.Models.Personagem", null)
                    .WithMany("ObrasPersonagem")
                    .HasForeignKey("PersonagemId");

                b.HasOne("animeAlley.Models.Show", "Shows")
                    .WithMany()
                    .HasForeignKey("ShowID")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Shows");
            });

            modelBuilder.Entity("animeAlley.Models.Personagem", b =>
            {
                b.HasOne("animeAlley.Models.Show", null)
                    .WithMany("PersonagensShows")
                    .HasForeignKey("ShowId");
            });

            modelBuilder.Entity("animeAlley.Models.Show", b =>
            {
                b.HasOne("animeAlley.Models.Autor", "Autor")
                    .WithMany()
                    .HasForeignKey("AutorFK")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("animeAlley.Models.Studio", "Studio")
                    .WithMany()
                    .HasForeignKey("StudioFK")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Autor");

                b.Navigation("Studio");
            });

            modelBuilder.Entity("animeAlley.Models.Topico", b =>
            {
                b.HasOne("animeAlley.Models.Forum", null)
                    .WithMany("Topicos")
                    .HasForeignKey("ForumId");

                b.HasOne("animeAlley.Models.Utilizador", "AutorTopico")
                    .WithMany()
                    .HasForeignKey("UtilizadorId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("AutorTopico");
            });

            modelBuilder.Entity("animeAlley.Models.Autor", b =>
            {
                b.Navigation("ObrasAutor");
            });

            modelBuilder.Entity("animeAlley.Models.Forum", b =>
            {
                b.Navigation("Topicos");
            });

            modelBuilder.Entity("animeAlley.Models.Lista", b =>
            {
                b.Navigation("ListaShows");
            });

            modelBuilder.Entity("animeAlley.Models.Personagem", b =>
            {
                b.Navigation("ObrasPersonagem");
            });

            modelBuilder.Entity("animeAlley.Models.Show", b =>
            {
                b.Navigation("GenerosShows");

                b.Navigation("ListaShows");

                b.Navigation("PersonagensShows");
            });

            modelBuilder.Entity("animeAlley.Models.Topico", b =>
            {
                b.Navigation("Comentarios");
            });

            modelBuilder.Entity("animeAlley.Models.Utilizador", b =>
            {
                b.Navigation("Listas");
            });
#pragma warning restore 612, 618
        }
    }
}
