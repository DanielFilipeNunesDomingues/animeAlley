@model animeAlley.Models.Personagem

@{
    ViewData["Title"] = "Excluir" + Model.Nome;
}

<div class="show-delete">
    <div class="container d-flex justify-content-md-between justify-content-center align-items-center flex-wrap gap-2">
        <p>Tem certeza que quer excluir esse show?</p>
        <form asp-action="Delete">
            <input type="hidden" asp-for="Id" />
            <input type="submit" value="Excluir Show" class="btn btn-danger" /> |
            <a asp-action="Index">Voltar à Lista</a>
        </form>
    </div>
</div>

<div class="bg-secondary">
    <div class="container py-lg-5 py-3 personagem-header">
        <div class="d-flex justify-content-between">
            <h1 class="m-0">@Html.DisplayFor(Model => Model.Nome)</h1>
            @if (User.IsInRole("Admin"))
            {
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id"><svg xmlns="http://www.w3.org/2000/svg" height="16px" viewBox="0 -960 960 960" width="16px" fill="#C4AEAE"><path d="M200-200h57l391-391-57-57-391 391v57Zm-80 80v-170l528-527q12-11 26.5-17t30.5-6q16 0 31 6t26 18l55 56q12 11 17.5 26t5.5 30q0 16-5.5 30.5T817-647L290-120H120Zm640-584-56-56 56 56Zm-141 85-28-29 57 57-29-28Z" /></svg></a>
                    <a asp-action="Delete" asp-route-id="@Model.Id"><svg xmlns="http://www.w3.org/2000/svg" height="16px" viewBox="0 -960 960 960" width="16px" fill="#C4AEAE"><path d="M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z" /></svg></a>
                </div>
            }
        </div>
    </div>
</div>

<div class="container position-relative personagem-info py-3 min-vh-100">
    <div class="foto-wrap">
        <div class="cover">
            <img src="~/images/personagensFoto/@Html.DisplayFor(Model => Model.Foto)" alt="@Html.DisplayFor(Model => Model.Nome) | Foto" />
        </div>
    </div>

    <div class="info">
        @if (Model.Idade.HasValue)
        {
            <p><b>Idade:</b> @Html.DisplayFor(Model => Model.Idade)</p>
        }

        @if (Model.PersonagemSexualidade.HasValue)
        {
            <p><b>Gênero:</b> @Html.DisplayFor(Model => Model.PersonagemSexualidade)</p>
        }

        @if (Model.DataNasc.HasValue)
        {
            <p><b>Data de Nascimento:</b> @Html.DisplayFor(Model => Model.DataNasc)</p>
        }

        <div id="sinopseWrapper" class="sinopse-collapsed">
            <p id="sinopseText">@Html.DisplayFor(Model => Model.Sinopse)</p>
        </div>
        <button id="toggleSinopse" class="toggle-btn">Ler mais</button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sinopseWrapper = document.getElementById('sinopseWrapper');
            const toggleSinopseBtn = document.getElementById('toggleSinopse');
            const sinopseTextElement = document.getElementById('sinopseText');

            if (sinopseTextElement) {
                let originalText = sinopseTextElement.innerHTML;
                const regex = /\bBR\b/gi;
                let newText = originalText.replace(regex, '<br>');
                sinopseTextElement.innerHTML = newText;
            }

            sinopseWrapper.style.overflow = 'visible';
            sinopseWrapper.style.height = 'auto';
            const fullHeight = sinopseWrapper.scrollHeight;

            sinopseWrapper.style.overflow = 'hidden';
            sinopseWrapper.classList.add('sinopse-collapsed');

            const tempDiv = document.createElement('div');
            tempDiv.classList.add('sinopse-collapsed');
            tempDiv.style.position = 'absolute';
            tempDiv.style.visibility = 'hidden';
            tempDiv.innerHTML = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.';
            document.body.appendChild(tempDiv);

            const collapsedMaxHeight = tempDiv.clientHeight;
            document.body.removeChild(tempDiv);


            if (fullHeight <= collapsedMaxHeight) {
                toggleSinopseBtn.style.display = 'none';
                sinopseWrapper.style.height = 'auto';
                sinopseWrapper.style.overflow = 'visible';
            } else {
                toggleSinopseBtn.style.display = 'block';
                sinopseWrapper.style.height = collapsedMaxHeight + 'px';
                sinopseWrapper.classList.add('sinopse-collapsed');
            }

            toggleSinopseBtn.addEventListener('click', function() {
                if (sinopseWrapper.classList.contains('sinopse-collapsed')) {
                    sinopseWrapper.classList.remove('sinopse-collapsed');
                    sinopseWrapper.classList.add('sinopse-expanded');
                    sinopseWrapper.style.height = fullHeight + 'px';
                    toggleSinopseBtn.textContent = 'Ler menos';
                } else {
                    sinopseWrapper.classList.remove('sinopse-expanded');
                    sinopseWrapper.classList.add('sinopse-collapsed');
                    sinopseWrapper.style.height = collapsedMaxHeight + 'px';
                    toggleSinopseBtn.textContent = 'Ler mais';
                }
            });
        });
    </script>
}